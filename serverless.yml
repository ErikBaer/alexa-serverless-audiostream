service: ${file(config/default.json):setup.serviceName}
provider:
  name: aws
  region: eu-central-1
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: dev
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamoDB:CreateTable
            - dynamoDB:GetItem
            - dynamoDB:PutItem
          Resource: "arn:aws:dynamodb:${self:provider.region}:${file(config/default.json):credentials.awsAccountId}:table/${self:resources.Resources.usersTable.Properties.TableName}"
functions:
  alexa:
    handler: src/index.handler
    events:
      - alexaSkill: ${file(config/default.json):setup.skillID}
    name: alexa-streaming-${self:provider.stage}
    environment:
      streamUrl: ${file(config/default.json):stream.url}
      streamTitle: ${file(config/default.json):stream.title}
      streamSubTitle: ${file(config/default.json):stream.subtitle}
      streamName: ${file(config/default.json):stream.name}
      tableName: ${self:resources.Resources.usersTable.Properties.TableName}


plugins:
  - serverless-plugin-typescript
  - serverless-alexa-skills

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  alexa:
    vendorId: ${file(config/default.json):credentials.vendorId}
    clientId: ${file(config/default.json):credentials.clientId}
    clientSecret: ${file(config/default.json):credentials.clientSecret}
    skills:
      - id: ${file(config/default.json):setup.skillID}
        manifest:
          apis:
            custom:
              endpoint:
                uri: arn:aws:lambda:${self:provider.region}:${file(config/default.json):credentials.awsAccountId}:function:alexa-streaming-${self:provider.stage}
              interfaces:
                - type: AUDIO_PLAYER
          manifestVersion: '1.0'
          publishingInformation:
            category: STREAMING_SERVICE
            distributionCountries: [ ]
            isAvailableWorldwide: true
            locales:
              de-DE:
                description: Streame deine liebste Radiostation - mit baer data!
                examplePhrases:
                  - Ã¶ffne baer data
                  - starte baer data
                keywords: [ ]
                name: ${file(config/default.json):setup.serviceName}
                summary: Streame deine liebste Radiostation - mit baer data!
                smallIconUri:  ${file(config/default.json):assets.smallIconUri}
                largeIconUri: ${file(config/default.json):assets.largeIconUri}
            testingInstructions: Sample Testing Instructions.
          privacyAndCompliance:
            allowsPurchases: false
            usesPersonalInfo: false
            isChildDirected: false
            isExportCompliant: true
            containsAds: false
            locales:
              de-DE:
                privacyPolicyUrl: http://www.myprivacypolicy.erikbaer.de
                termsOfUseUrl: http://www.termsofuse.erikbaer.de
        models:
          de-DE:
            interactionModel:
              languageModel:
                invocationName: ${file(config/default.json):setup.invocationName}
                intents: ${file(src/intents/intents-de-DE.json):intents}
                types: []





